service:
  name: backend-nodejs

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

  serverless-iam-roles-function:
    defaultInherit: true
  
  warmup:
    enabled: true

plugins:
  - serverless-webpack
  - serverless-plugin-optimize
  - serverless-offline
  - serverless-iam-roles-per-function
  - serverless-plugin-warmup

provider:
  name: aws
  runtime: nodejs12.x
  apiGateway:
    minimumCompressionSize: 1024
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    TODOS_TABLE: serverless-todos-${self:provider.stage}
    ATTACHMENTS_BUCKET: attachemnts-url-${self:provider.stage}

inputs:
  src: ./
  memory: 512
  timeout: 10
  description: Nodejs / Express backend
  enf:
    DEBUG: 'express:*'
  traffic: 0.2
  region: us-west-1
  stage: dev

functions:
#  hello:
#    handler: handler.hello
#    events:
#      - http:
#          method: get
#          path: hello

# @TODO Configure this function
  GetTodos:
    handler: src/lambda/http/getTodos.handler
    events:
      - http:
          method: get 
          path: todos

# @TODO Configure resources
resources:
  Resources:
    # Attachment Bucket created
    AttachmentsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.ATTACHMENTS_BUCKET}
        CorsConfiguration:
          CorsRules:
            -
              AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET 
                - PUT 
                - POST 
                - HEAD 
                - DELETE
              MaxAge: 3000

    # Setup Gateway Response Default 4XX
    GatewayResponseDefault4XX:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

    # Setup DynamoDB table
    TodosDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          -
            AttributeName: todoId
            AttributeType: S
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: todoId
            KeyType: HASH
          -
            AttributeName: userId 
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.TODOS_TABLE}